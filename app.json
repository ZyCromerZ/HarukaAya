
{
    "name": "HarukaAya Bot",
    "description": "Modular Telegram group management bot!",
    "keywords": [
      "telegram",
      "best",
      "group",
      "manager",
      "3"
    ],
    "repository": "https://github.com/intellivoid/HarukaAya",
    "env": {
      "ENV": {
        "description": "Setting this to ANYTHING will enable env variables",
        "value": "ANYTHING"
      },
      "TOKEN": {
        "description": "Your bot token, as a string.",
        "value": ""
      },
      "API_KEY": {
        "description": "Your API_KEY, as a string.",
        "value": ""
      },
      "API_HASH": {
        "description": "Your API_HASH, as a string.",
        "value": ""
      },
      "OWNER_ID": {
        "description": "An integer of consisting of your owner ID",
        "value": "1613725726"
      },
      "OWNER_USERNAME": {
        "description": "Your username",
        "value": "Clurfe"
      },
      "MESSAGE_DUMP": {
        "description": "optional: a chat where your replied saved messages are stored, to stop people deleting their old",
        "value": "-1001434683571"
      },
      "SUDO_USERS": {
        "description": "A space separated list of user_ids which should be considered sudo users",
        "value": ""
      },
      "WHITELIST_USERS": {
        "description": "A space separated list of user_ids which should be considered whitelisted - they can't be banned.",
        "value": ""
      },
      "DEL_CMDS": {
        "description": "Whether to delete commands from users which don't have rights to use that command",
        "value": "True"
      },
      "STRICT_ANTISPAM": {
        "description": "Enforce gbans across new groups as well as old groups. When a gbanned user talks, he will be banned.",
        "value": "True"
      },
      "SW_API": {
        "description": "PM https://t.me/SpamWatchBot to get API",
        "value": ""
      },
      "DATABASE_URL": {
        "description": "(optional) ur database url",
        "value": "",
        "required": false
      }
    },
    "addons": [
      {
        "plan": "heroku-postgresql",
        "options": {
          "version": "13"
        }
      }
    ],
    "stack": "container"
  }